[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "visual-layer-sdk"
version = "0.1.18"
description = "A Python SDK for interacting with the Visual Layer API"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jack Zhang", email = "jack@visual-layer.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "PyJWT>=2.8.0",
    "pandas>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.12.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/jackzhang25/vl-package"
Repository = "https://github.com/jackzhang25/vl-package"
Documentation = "https://github.com/jackzhang25/vl-package"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 200
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
# Same as Black.
line-length = 200

# Assume Python 3.10
target-version = "py310"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) codes
select = ["E", "F", "I"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
# Import sorting configuration
known-first-party = ["visual_layer_sdk"]
known-third-party = ["requests", "pandas", "jwt", "dotenv"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"] 